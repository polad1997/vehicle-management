version: "3.8"
services:
  mongo:
    image: mongo:4.4
    container_name: mongo
    hostname: mongo
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      - MONGO_INITDB_ROOT_USERNAME=rootuser
      - MONGO_INITDB_ROOT_PASSWORD=rootpass
      - MONGO_INITDB_DATABASE=iomotodb
      - MONGO_DB_USERNAME=rootuser
      - MONGO_DB_PASSWORD=rootpass
    networks:
      - main-network
    command: [ "--bind_ip", "0.0.0.0" ]

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    restart: on-failure
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_ADMINUSERNAME=rootuser
      - ME_CONFIG_MONGODB_ADMINPASSWORD=rootpass
      - ME_CONFIG_MONGODB_SERVER=mongo
    depends_on:
      - mongo
    networks:
      - main-network

  api-service:
    build:
      context: .
      dockerfile: Dockerfile
    image: api-service
    container_name: api-service
    restart: on-failure
    depends_on:
      - mongo
    ports:
      - "8088:8080"
    environment:
      - SERVER_PORT=8080
      - SPRING_APPLICATION_NAME=api-service
      - SPRING_DATA_MONGODB_AUTHENTICATION_DATABASE=admin
      - SPRING_DATA_MONGODB_AUTO_INDEX_CREATION=true
      - SPRING_DATA_MONGODB_HOST=mongo
      - SPRING_DATA_MONGODB_PORT=27017
      - SPRING_DATA_MONGODB_USERNAME=rootuser
      - SPRING_DATA_MONGODB_PASSWORD=rootpass
      - SPRING_DATA_MONGODB_DATABASE=iomotodb
    networks:
      - main-network

#first, need to create network -> docker network create mongonetwork
networks:
  main-network:
    external:
      name: mongonetwork
